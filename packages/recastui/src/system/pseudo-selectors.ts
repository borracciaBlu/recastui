import { PseudoSelectorPropName } from '@recastui/ui/system/types';

export const pseudoSelectors: Record<PseudoSelectorPropName, string> = {
	_hover: '&:hover, &[data-hover]',
	_active: '&:active, &[data-active]',
	_focus: '&:focus, &[data-focus]',
	_highlighted: '&[data-highlighted]',
	_focusWithin: '&:focus-within',
	_focusVisible: '&:focus-visible',
	_disabled: '&[disabled], &[aria-disabled=true], &[data-disabled]',
	_readOnly: '&[aria-readonly=true], &[readonly], &[data-readonly]',
	_before: '&::before',
	_after: '&::after',
	_empty: '&::empty',
	_expanded: '&[aria-expanded=true], &[data-expanded]',
	_checked: '&:checked, &[aria-checked=true], &[data-checked]',
	_grabbed: '&[aria-grabbed=true], &[data-grabbed]',
	_pressed: '&[aria-pressed=true], &[data-pressed]',
	_invalid: '&[aria-invalid=true], &[data-invalid]',
	_valid: '&[data-valid], &[data-state=valid]',
	_loading: '&[data-loading], &[aria-busy=true]',
	_selected: '&[aria-selected=true], &[data-selected]',
	_hidden: '&[hidden], &[data-hidden]',
	_autofill: '&:-webkit-autofill',
	_even: '&:nth-of-type(even)',
	_odd: '&:nth-of-type(odd)',
	_first: '&:first-of-type',
	_last: '&:last-of-type',
	_notFirst: '&:not(:first-of-type)',
	_notLast: '&:not(:last-of-type)',
	_visited: '&:visited',
	_activeLink: '&[aria-current=page]',
	_activeStep: '&[aria-current=step]',
	_indeterminate: '&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]',
	_groupHover: '&[role=group]:hover &, &[role=group][data-hover] &',
	_groupFocus: '&[role=group]:focus &, &[role=group][data-focus] &',
	_groupActive: '&[role=group]:active &, &[role=group][data-active] &',
	_groupDisabled: '&[role=group]:disabled &, [role=group][data-disabled] &',
	_groupInvalid: '&[role=group][data-invalid] &',
	_groupChecked: '&[role=group][data-checked] &',
	_groupFocusWithin: '&::focus-within &',
	_groupFocusVisible: '[role=group]:focus-visible &, [data-group]:focus-visible &',
	_peerActive:
		'[data-peer]:active ~ &, [data-peer][data-active] ~ &, .peer:active ~ &, .peer[data-active] ~ &',
	_peerChecked:
		'[data-peer]:checked ~ &, [data-peer][data-checked] ~ &, .peer:checked ~ &, .peer[data-checked] ~ &',
	_peerDisabled:
		'[data-peer]:disabled ~ &, [data-peer][data-disabled] ~ &, .peer:disabled ~ &, .peer[data-disabled] ~ &',
	_peerFocus:
		'[data-peer]:focus ~ &, [data-peer][data-focus] ~ &, .peer:focus ~ &, .peer[data-focus] ~ &',
	_peerFocusVisible: '[data-peer]:focus-visible ~ &, .peer:focus-visible ~ &',
	_peerFocusWithin: '[data-peer]:focus-within ~ &, .peer:focus-within ~ &',
	_peerHover:
		'[data-peer]:hover ~ &, [data-peer][data-hover] ~ &, .peer:hover ~ &, .peer[data-hover] ~ &',
	_peerInvalid:
		'[data-peer]:invalid ~ &, [data-peer][data-invalid] ~ &, .peer:invalid ~ &, .peer[data-invalid] ~ &',
	_peerPlaceholderShown: '[data-peer]:placeholder-shown ~ &, .peer:placeholder-shown ~ &',
	_placeholder: '&::placeholder',
	_placeholderShown: '&:placeholder-shown',
	_fullScreen: '&:fullscreen',
	_selection: '&::selection',
	_rtl: '[dir=rtl] &, &[dir=rtl]',
	_ltr: '[dir=ltr] &, &[dir=ltr]',
	_mediaDark: '@media (prefers-color-scheme: dark)',
	_mediaReduceMotion: '@media (prefers-reduced-motion: reduce)'
};
